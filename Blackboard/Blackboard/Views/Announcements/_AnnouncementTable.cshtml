@model Blackboard.Models.Relationship



@foreach (var item in Model.Announements.Reverse())
{
    <div id="announceDetail">

        <b>
            @Html.DisplayNameFor(model => item.Title):
        </b>
        @Html.DisplayFor(modelItem => item.Title)


        <div id="Description">
            <p>
                <b>
                    @Html.DisplayNameFor(model => item.Description):
                </b>
                @Html.DisplayFor(modelItem => item.Description)
            </p>
        </div>
        <p>
            <b>
                @Html.DisplayNameFor(model => item.DateOfAnnouncement):
            </b>
            @Html.DisplayFor(modelItem => item.DateOfAnnouncement)
        </p>
        @if (User.IsInRole("Lecturer"))
        {
            <p>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            </p>
        }

        @using (Ajax.BeginForm("AjaxDeleteAnnouncement", "Announcements", new { id = item.Id }, new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            UpdateTargetId = "tableDiv"
        }))
        {
            if (User.IsInRole("Lecturer"))
            {
                @Html.AntiForgeryToken()
                <input type="submit" value="Delete" class="btn btn-default" />
            }

        }


    </div>
        <div id="commentPadding">
            <b>
                Comment Section
            </b>
        </div>
    foreach (var itemComment in item.Comments.Reverse())
    {
        <div id="commentSection">
            <p>
                @Html.DisplayFor(modelItem => itemComment.CommentString)
            </p>

            <p>
                @if (User.IsInRole("Lecturer"))
                    {
                    @Html.ActionLink("Delete", "EditDelete", new { id = itemComment.CommentId })
                }
            </p>
        </div>
    }

    using (Ajax.BeginForm("AjaxCreate", "Announcements", new { id = item.Id }, new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        UpdateTargetId = "tableDiv"
    }))

    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CommentRelationship.CommentString, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="">
                @Html.EditorFor(model => model.CommentRelationship.CommentString, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommentRelationship.CommentString, "", new { @class = "text-danger" })
            </div>
        </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
    }

}
